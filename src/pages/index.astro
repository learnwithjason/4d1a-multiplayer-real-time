---

---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body>
		<section id="hero">
			<span class="connection-count">1</span>
		</section>

		<template id="thingy">
			<div class="thingy"></div>
		</template>
	</body>
</html>

<script>
	import PartySocket from 'partysocket';

	const partySocket = new PartySocket({
		host: import.meta.env.PUBLIC_PARTYKIT_URL,
		room: '4d1a',
	});

	partySocket.addEventListener('message', (e) => {
		const msg = JSON.parse(e.data);

		if (!msg.count) {
			return;
		}

		const counter = document.querySelector('.connection-count') as HTMLElement;
		const template = document.querySelector('#thingy') as HTMLTemplateElement;
		const heroEl = document.querySelector('#hero');

		counter.innerText = msg.count;

		if (msg.type === 'join') {
			console.log(msg.connections);
			msg.connections.forEach((id: string) => {
				const elExists = document.querySelector(`[data-id="${id}"]`);
				console.log(elExists);

				if (!elExists) {
					const thingy = template.content.firstElementChild!.cloneNode(
						true,
					) as HTMLDivElement;

					thingy.dataset.id = id;

					const mixPercent = Math.min((msg.count / 10) * 100, 100) + '%';
					thingy.style.setProperty('--color-mix-percent', mixPercent);
					heroEl?.appendChild(thingy);
				}
			});
		}

		if (msg.type === 'leave') {
			const toRemove = heroEl?.querySelector(`[data-id="${msg.id}"]`);
			toRemove?.remove();
		}
	});
</script>

<style is:global>
	:root {
		--color-mix-percent: 0%;
		--color-background: oklch(95.76% 0.0051 192.71);
		--color-border: oklch(21.58% 0.037 192.71);
		--color-calm: oklch(95.29% 0.074 192.71);
		--color-energy: oklch(74.12% 0.195 22.24);
	}

	* {
		box-sizing: border-box;
	}

	html {
		font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
			Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
			'Segoe UI Symbol';
	}

	body {
		margin: 0;
	}
</style>

<style>
	#hero {
		display: grid;
		gap: 1rem;
		grid-template-columns: repeat(auto-fit, 3rem);
		place-content: center;
		background: var(--color-background);
		height: 80dvh;
		position: relative;
	}

	.connection-count {
		position: absolute;
		inset-block-start: 1rem;
		inset-inline-end: 1rem;
	}

	.thingy {
		background-color: color-mix(
			in oklch,
			var(--color-calm),
			var(--color-energy) var(--color-mix-percent)
		);
		border: 1px solid var(--color-border);
		border-radius: 50%;
		display: block;
		aspect-ratio: 1;
		height: 3rem;
	}
</style>
